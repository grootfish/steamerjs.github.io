(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{187:function(t,e,r){"use strict";r.r(e);var a=r(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("前端的开发体系，不外乎如下几大要样，AlloyTeam 内部都有对应的解决方案。")]),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("具体的开发流程，是怎么样的呢？")]),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("为日后开发更为顺畅，请你入职第一天先把 Steamerjs 这个核心库先安装了，这对于你后面提高开发效率大有裨益，因为你可以使用各类 Steamer 命令行插件以及系列的脚手架进行开发。")]),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("我们通过 Steamer 命令行工具 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/How-To-Start.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("steamer-plugin-kit"),r("OutboundLink")],1),t._v(" 生成脚手架，官方分别提供了 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/Starterkit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("业务项目"),r("OutboundLink")],1),t._v(" 及 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/Component-Starterkit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("组件开发"),r("OutboundLink")],1),t._v(" 两种脚手架。")]),t._v(" "),r("p",[t._v("通过 命令行工具 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/Steamer-Plugin-AK.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("steamer-plugin-ak"),r("OutboundLink")],1),t._v(" 或者 webpack插件 "),r("a",{attrs:{href:"https://github.com/steamerjs/ak-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("ak-webpack-pulgin"),r("OutboundLink")],1),t._v("，集成了离线包发布功能。生成的离线包 "),r("code",[t._v("zip")]),t._v(" 文件，可以通过 AlloyKit 离线包发布平台进行发布。")]),t._v(" "),r("p",[t._v("通过 集成 SDK 方式，脚手架支持 alloy_report 统一上报工具，以及 Sentry 错误监控。项目发布后，便可以通过 AlloyStore, Monitor, TDW, Sentry 等平台监控我们产品各个纬度的数据。")]),t._v(" "),r("p",[t._v("通过集成直出服务器的方式，可以允许我们通过 Steamer 系列脚手架同时进行直出及静态资源逻辑的开发。")]),t._v(" "),t._m(4),t._v(" "),r("p",[t._v("有时候前端开发比较快，那我们可以利用内部的 LinkStar 系统进行数据联调。不过，有时候我们会开发一些与业务无关的技术项目或者运营项目，那我们可以使用 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/Steamer-Plugin-Mock.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("steamer-plugin-mock"),r("OutboundLink")],1),t._v(" 在脚手架中部署我们的本地假数据联调平台。")]),t._v(" "),t._m(5),t._v(" "),r("p",[t._v("业务开发过程中，为了方便复用，我们会提取出一些组件。我们通常会采用 Steamer提供的 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/Component-Starterkit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("组件开发"),r("OutboundLink")],1),t._v(" 脚手架进行开发。开发完毕后，你可以手动将脚手架中的 example 目录中的 demo 拷贝到AlloyStore 组件展示平台上。但我们有更快捷的方法，我们可以使用 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/Steamer-Plugin-Alloystore.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("steamer-plugin-alloystore"),r("OutboundLink")],1),t._v(" 上传你的组件 demo 到 AlloyStore 上面。")]),t._v(" "),t._m(6),t._v(" "),r("p",[t._v("项目开发基本结束后，我们要通过 JB 测试部署平台将准生产代码部署到测试服务器上，给产品体验及测试提测。我们可以通过 "),r("a",{attrs:{href:"https://steamerjs.github.io/docs/Steamer-Plugin-JB.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("steamer-plugin-jb"),r("OutboundLink")],1),t._v(" 生成 JB 的相关配置。如果你是采用本地构建的，使用命令的时候选择 offline； 如果你是采用服务器构建的，你使用命令的时候请选择 online。")]),t._v(" "),t._m(7),t._v(" "),r("p",[t._v("当测试通过后，我们便会从 JB 测试部署平台上，选择通过 ARS 平台，将代码发布到外网。")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"steamerjs-前端开发体系及其工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#steamerjs-前端开发体系及其工作流","aria-hidden":"true"}},[this._v("#")]),this._v(" steamerjs 前端开发体系及其工作流")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ol",[r("li",[t._v("Steamer 命令行工具及脚手架")]),t._v(" "),r("li",[t._v("AlloyStore 组件展示平台")]),t._v(" "),r("li",[t._v("LinkStar 假数据联调平台")]),t._v(" "),r("li",[t._v("JB 测试部署平台")]),t._v(" "),r("li",[t._v("Ars 发布上线平台")]),t._v(" "),r("li",[t._v("AlloyData 数据上报平台")]),t._v(" "),r("li",[t._v("Sentry 错误监控平台")]),t._v(" "),r("li",[t._v("AlloyKit 离线包发布平台")]),t._v(" "),r("li",[t._v("XuanWu 直出平台")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"第零步-steamerjs-核心库安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第零步-steamerjs-核心库安装","aria-hidden":"true"}},[this._v("#")]),this._v(" 第零步 Steamerjs 核心库安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"第一步-脚手架生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一步-脚手架生成","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一步 脚手架生成")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"第二步-假数据联调"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二步-假数据联调","aria-hidden":"true"}},[this._v("#")]),this._v(" 第二步 假数据联调")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"第三步-组件开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三步-组件开发","aria-hidden":"true"}},[this._v("#")]),this._v(" 第三步 组件开发")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"第四步-测试部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四步-测试部署","aria-hidden":"true"}},[this._v("#")]),this._v(" 第四步 测试部署")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"第五步-发布上线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第五步-发布上线","aria-hidden":"true"}},[this._v("#")]),this._v(" 第五步 发布上线")])}],!1,null,null,null);s.options.__file="Steamer-Process.md";e.default=s.exports}}]);